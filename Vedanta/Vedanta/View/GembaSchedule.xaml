<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:Converter="clr-namespace:Vedanta.Converters" 
             xmlns:xct="http://xamarin.com/schemas/2020/toolkit"
             x:Class="Vedanta.View.GembaSchedule"
             Title="Gemba Schedule" NavigationPage.HasNavigationBar="False" xmlns:components="clr-namespace:Vedanta.Components"
             xmlns:behaviors="clr-namespace:Prism.Behaviors;assembly=Prism.Forms"
             x:Name="GembaScheduleScreen">
    <ContentPage.Resources>
        <ResourceDictionary>
            <Converter:StringToColorConverter x:Key="StrToColConverter" />
            <Converter:StatusToButtonTextConverter x:Key="StatusToBTextConverter" />
            <Converter:DateChangedEventArgsConverter x:Key="dateChangedEventArgsConverter" />
            <Converter:InverseBoolConverter x:Key="InvertedBoolConverter" />
        </ResourceDictionary>
        
    </ContentPage.Resources>
    <ContentPage.Content>
        <Grid RowDefinitions="1*,1.5*,8*" RowSpacing="0" >
            <Frame Grid.Row="0" BackgroundColor="#006699" >
                <Grid ColumnDefinitions="1*,6*, 2*" Margin="0,0,5,0">
                    <Image Source="hamburger.png" HeightRequest="20" WidthRequest="20" Aspect="AspectFit" VerticalOptions="Center" HorizontalOptions="Start">
                        <Image.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding UserProfilePopulateCommand}" />
                        </Image.GestureRecognizers>
                    </Image>
                    <Label Grid.Column="1" Text="Gemba Schedule"  IsVisible="{Binding IsSearchTapped, Converter={StaticResource InvertedBoolConverter}}" TextColor="White" FontSize="18"  VerticalOptions="Center" HorizontalOptions="StartAndExpand" />
                    <components:CustomEntry Grid.Column="1" Text="{Binding SearchText}"  IsVisible="{Binding IsSearchTapped}" BackgroundColor="White" Margin="0" HorizontalTextAlignment="Start" VerticalTextAlignment="Center" VerticalOptions="Center" FontSize="14" Placeholder="Search">
                        <components:CustomEntry.Behaviors>
                            <behaviors:EventToCommandBehavior EventName="TextChanged" Command="{Binding SearchTextChangedCommand}" CommandParameter="{Binding .}" />
                        </components:CustomEntry.Behaviors>
                    </components:CustomEntry>
                    <StackLayout Grid.Column="2" HorizontalOptions="End" VerticalOptions="Center" Orientation="Horizontal" Spacing="20">
                        <Image Source="search_icon" HeightRequest="25" WidthRequest="25" IsVisible="{Binding IsSearchTapped, Converter={StaticResource InvertedBoolConverter}}">
                            <Image.GestureRecognizers>
                                <TapGestureRecognizer Command="{Binding SearchTappedCommand}" />
                            </Image.GestureRecognizers>
                        </Image>
                        <Image Source="close" HeightRequest="20" WidthRequest="20" IsVisible="{Binding IsSearchTapped}">
                            <Image.GestureRecognizers>
                                <TapGestureRecognizer Command="{Binding CancelTappedCommand}" />
                            </Image.GestureRecognizers>
                        </Image>
                        <Image Source="filter_new" HeightRequest="25" WidthRequest="25">
                            <Image.GestureRecognizers>
                                <TapGestureRecognizer Command="{Binding NavigateToFilterPageCommand}" NumberOfTapsRequired="1" />
                            </Image.GestureRecognizers>
                        </Image>
                    </StackLayout>
                </Grid>
               
            </Frame>

            <Frame Padding="10" Grid.Row="1" BackgroundColor="LightGray">

                <!--<components:CustomCalendarComponent InitialDate="{Binding StartDate,Mode=TwoWay}">
                    <components:CustomCalendarComponent.Behaviors>
                        <behaviors:EventToCommandBehavior EventName="SelectedDateEvent" Command="{Binding SelectedDateCommand}" CommandParameter="{Binding .}" />
                    </components:CustomCalendarComponent.Behaviors>
                </components:CustomCalendarComponent>-->

                <Grid RowDefinitions="3*,7*" ColumnDefinitions="5*,5*"   >
                    <Label Grid.Row="0" Text="Schedule List" FontSize="16" TextColor="Black" FontAttributes="Bold"></Label>
                    <Grid Grid.Row="1" Grid.Column="0" ColumnDefinitions="8*,2*"  >

                        <!--<Label Grid.Column="0" Text="{Binding StartDateText}" FontSize="14" TextColor="Black" VerticalOptions="Center" HorizontalOptions="Center"></Label>
                        <Image Grid.Column="1" Source="DropDown" HeightRequest="20" WidthRequest="20" VerticalOptions="Center" HorizontalOptions="Start" />-->

                        <StackLayout Grid.Column="0" Grid.ColumnSpan="2" Orientation="Vertical" Spacing="0"   VerticalOptions="Center" HorizontalOptions="Start" Margin="10,0,0,0">
                            <Label Margin="0" Padding="0" Text=" Start Date" FontAttributes="Bold"  />

                            <DatePicker Margin="0,-5,0,0" FontSize="14" Date="{Binding StartDate}"  MaximumDate="{Binding EndDate}" Format="dd-MM-yyyy" TextColor="Black" TextTransform="Uppercase">
                                <DatePicker.Behaviors>
                                    <behaviors:EventToCommandBehavior EventName="DateSelected" Command="{Binding StartDateSelectedCommand}" CommandParameter="{Binding StartDate}" />
                                </DatePicker.Behaviors>
                            </DatePicker>
                        </StackLayout>

                        
                    </Grid>

                    <Grid Grid.Row="1" Grid.Column="1" ColumnDefinitions="8*,2*"  >
                        <!--<Label Grid.Column="0" Text="{Binding EndDateText}" FontSize="14" TextColor="Black" VerticalOptions="Center" HorizontalOptions="Center"></Label>
                        <Image Grid.Column="1" Source="DropDown" HeightRequest="20" WidthRequest="20" VerticalOptions="Center" HorizontalOptions="Start" />-->

                        <StackLayout Grid.Column="0" Grid.ColumnSpan="2" Orientation="Vertical" Spacing="0" VerticalOptions="Center" HorizontalOptions="End" Margin="0,0,10,0">
                            <Label Margin="0" Padding="0" Text=" End Date" FontAttributes="Bold" />

                            <DatePicker Margin="0,-5,0,0" FontSize="14" Date="{Binding EndDate}"  Format="dd -MM-yyyy" TextColor="Black" TextTransform="Uppercase">
                                <DatePicker.Behaviors>
                                    <behaviors:EventToCommandBehavior EventName="DateSelected" Command="{Binding EndDateSelectedCommand}" CommandParameter="{Binding EndDate}" />
                                </DatePicker.Behaviors>
                            </DatePicker>
                        </StackLayout>


                    </Grid>
                   
                </Grid>
            </Frame>

            <ListView Grid.Row="2" ItemsSource="{Binding GembaScheduleList}" SelectionMode="None"  HasUnevenRows="True" SeparatorVisibility="Default"  >
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <ViewCell>
                            <Grid Grid.Row="2" RowDefinitions="1.5*,2.5*,2.5*,2.5*" Margin="20,10,20,10" >
                               
                                <Grid Grid.Row="0" ColumnDefinitions="5*,5*" HeightRequest="20">
                                    <Label Grid.Column="0" Text="{Binding Date,StringFormat='{0:dd-MM-yyyy}'}" FontSize="16" TextColor="Gray" HorizontalOptions="StartAndExpand" VerticalOptions="Center" />
                                    <Frame Grid.Column="1" Padding="0" BackgroundColor="{Binding Status,Converter={StaticResource StrToColConverter}}" HeightRequest="10" Margin="0" CornerRadius="20">
                                        <Label Text="{Binding Status}" FontSize="14" TextColor="White" VerticalOptions="Center" HorizontalOptions="Center" />
                                    </Frame>
                                </Grid>
                               
                                <Label Grid.Row="1" Text="{Binding Department}" VerticalOptions="Center" Margin="0,10,0,10" FontSize="16" FontAttributes="Bold" TextColor="Black" />
                               
                                <Grid Grid.Row="2" ColumnDefinitions="5*,5*">
                                    <Label Grid.Column="0" HorizontalOptions="Start" Text="{Binding Score,StringFormat='Score- {0}'}" TextColor="Black" FontSize="16" />
                                    <Label Grid.Column="1" HorizontalOptions="End" Text="{Binding Percentage,StringFormat='Percentage- {0}'}" TextColor="Black" FontSize="16" />
                                </Grid>
                               
                                <!--<Frame Grid.Row="3" Padding="0" BorderColor="#006699" CornerRadius="5">
                                    --><!--<Label Text="{Binding Status,Converter={StaticResource StatusToBTextConverter}}" TextColor="Blue" FontSize="16" VerticalOptions="CenterAndExpand" HorizontalOptions="CenterAndExpand" />--><!--
                                    <Frame.GestureRecognizers>
                                        <TapGestureRecognizer Command="{Binding ObservationClickedCommmand}" CommandParameter="{Binding .}" />
                                    </Frame.GestureRecognizers>
                                </Frame>-->

                                <Button Grid.Row="3" Command="{Binding Source={x:Reference GembaScheduleScreen}, Path=BindingContext.ObservationClickedCommmand}" CommandParameter="{Binding .}" Text="{Binding Status,Converter={StaticResource StatusToBTextConverter}}" />
                            </Grid>
                        </ViewCell>
                        
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
            
        </Grid>
    </ContentPage.Content>
</ContentPage>